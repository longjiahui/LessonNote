
冒泡排序: 每次从数组的最低元素开始两两对比,　把最小的或最大的数上移,直到数组的最高的元素.
   注意第一次查出的就是第一最小或最大的值,查出后,下次的循环不再查询此数.

选择排序: 每次循环把最小的数放到数组的最低元素里. 查出的最小的数放到数组的第０个元素里,第二小的数放到数组的第１个元素里....

插入排序:　
	从第一个数开始，每个数都需要与前面的数比较，找到比它大的数则交换位置，直到找到比它小的数为止。   
	越是往后的数就越可能移动量变得越大.  

快速排序:
    使用左指针l, 右指针r. 首先从数组里挑第0个元素的值作为key, 右指针从右往左,把每个数与key对比,　直到找到比key小的数, 把找到的数存到左指针指向的位置里, 左指针往右偏移一个位置.  这时右指针的移动结朿, 左指针开始往右移, 把指向的数与key对比, 直到找到比key大的数, 然后把找到的数保存到右指针指向的位置里, 然后右指针往左移动一个位置. 接右指针移....左指针移... 直到左右指针指向同一位置, 则把key的值写到此位置上. 到这里一轮结束. 一轮结束后,比key大的数应在key的右边, 比key小的数应在key的左边.  接着从第0元素到左指针-1的区域重复排序,  从右指针+1到最后一个元素位置的区域也重新排序 


如：            12   15  9   20  6  31   24	

1:  key=12, l=0, r=6 
		当r=4时，  6比key小,  6存放到12的位置:
	       6    15  9   20   6  31  24   注意： 12在key里存起来
		
		l=1, 找到15比key大, 15存放在r的位置
	       6    15  9   20  15  31  24

		r=3, ...r=2时，找到比key小的数， 9存放到l位置
	
	       6    9   9   20  15  31  24,  l指针++, 当l/r指针指向同一位置时一轮结束

		key的值写到l/r位置
	       6    9   12  20  15  31  24
	
 	      	

		
